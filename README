Author: Tigran Hakobyan
version: 1.0

TODO: 

URL to the source code:

Basic Credits:


Multi-processed MapReduce simulator for a limited main memory.
Uses physical files to store intermediate map, reduce calculations. 
Based on Python’s multiprocessing Pool module (Python 3.4).

Three different prototypes are implemented based on the MR framework. 

1. Word Count; calculates the number of occurrences of each word in a .txt file.

2. Twitter; given the tweet attribute and its value find the number of tweets
satisfying the attribute condition. Works on a valid .json file containing bunch of tweets.

3. Numeric; given the column number of a .csv file find the (min, max, avg) tuple of the file.
Works on a valid .csv file. The column provided by user must be a column of numeric values.

Usage:

To run the WordCount program.
>>> python runner.py <file.txt> <number_of_processes>
e.g. python runner.py file.txt 7

To run the Twitter program.
>>> python runner.py <tweets_file.json> <attr> <attr_value> <number_of_processes>
e.g. python runner.py tweets.json ‘lang’ ’en’ 6

To run the Numeric program.
>>> python runner.py <file.csv> <col_number> <number_of_processes>
e.g. python runner.py file.csv 2 4

